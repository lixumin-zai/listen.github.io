<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lixumin-zai.github.io/listenfor/</id>
    <title>listen</title>
    <updated>2020-11-08T01:39:42.691Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lixumin-zai.github.io/listenfor/"/>
    <link rel="self" href="https://lixumin-zai.github.io/listenfor/atom.xml"/>
    <subtitle>日记</subtitle>
    <logo>https://lixumin-zai.github.io/listenfor/images/avatar.png</logo>
    <icon>https://lixumin-zai.github.io/listenfor/favicon.ico</icon>
    <rights>All rights reserved 2020, listen</rights>
    <entry>
        <title type="html"><![CDATA[基于ECS快速搭建Docker环境]]></title>
        <id>https://lixumin-zai.github.io/listenfor/post/ji-yu-ecs-kuai-su-da-jian-docker-huan-jing/</id>
        <link href="https://lixumin-zai.github.io/listenfor/post/ji-yu-ecs-kuai-su-da-jian-docker-huan-jing/">
        </link>
        <updated>2020-09-24T03:03:53.000Z</updated>
        <content type="html"><![CDATA[<h1 id="基于ecs快速搭建docker环境">基于ECS快速搭建Docker环境</h1>
<p>心得体会：<a href="https://www.docker.com/">Docker</a> 可以说是每一个开发人员必须了解的技术，它释放了计算虚拟化的威力，极大提高了应用的维护效率，同时降低了云计算应用开发的成本！本次学习中，了解了Docker的部署以及基本使用，值得注意的是在阿里云ECS服务器中，想要远程访问服务器需要在安全组开放相应端口，否则访问失败、连接不上服务器。</p>
<h2 id="连接ecs服务器">连接ECS服务器</h2>
<p>环境：windows10、Windows Terminal。</p>
<p>连接ECS服务器</p>
<pre><code class="language-shell">ssh root@[ipaddress]
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://lixumin-zai.github.io/listenfor//post-images/1600916762062.png" alt="" loading="lazy"></figure>
<h2 id="安装docker-ce">安装Docker CE</h2>
<ul>
<li>Docker CE<br>
Docker CE是免费的Docker产品的新名称，Docker CE包含了完整的Docker平台，非常适合开发人员和运维团队构建容器APP。</li>
<li>Docker EE<br>
Docker EE由公司支持，可在经过认证的操作系统和云提供商中使用，并可运行来自Docker Store的、经过认证的容器和插件。</li>
</ul>
<ol>
<li>安装Docker CE的依赖包</li>
</ol>
<pre><code class="language-shell">yum install -y yum-utils device-mapper-persistent-data lvm2
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://lixumin-zai.github.io/listenfor//post-images/1600916829228.png" alt="" loading="lazy"></figure>
<ol start="2">
<li>添加Docker CE的软件源信息，使用阿里源。</li>
</ol>
<pre><code class="language-shell">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://lixumin-zai.github.io/listenfor//post-images/1600916854638.png" alt="" loading="lazy"></figure>
<ol start="3">
<li>安装Docker CE。</li>
</ol>
<pre><code>yum makecache fast
yum -y install docker-ce
</code></pre>
<p><img src="https://lixumin-zai.github.io/listenfor//post-images/1600916865847.png" alt="" loading="lazy"><br>
<img src="https://lixumin-zai.github.io/listenfor//post-images/1600916877610.png" alt="" loading="lazy"></p>
<ol start="4">
<li>启动Docker服务。</li>
</ol>
<pre><code class="language-shell">systemctl start docker
</code></pre>
<h2 id="配置阿里云镜像仓库镜像加速">配置阿里云镜像仓库（镜像加速）</h2>
<p>Docker的默认官方远程仓库是<a href="https://hub.docker.com/">hub.docker.com</a>，由于网络原因，下载一个Docker官方镜像会需要很长的时间，甚至下载失败。使用阿里云容器镜像服务ACR提供了官方的镜像站点，从而加速官方镜像的下载。</p>
<ol>
<li>
<p>登录容器镜像服务控制台。<br>
<img src="https://lixumin-zai.github.io/listenfor//post-images/1600916901381.png" alt="" loading="lazy"></p>
</li>
<li>
<p>单击[镜像中心] &gt; [镜像加速器]，阿里云提供了一个专属的镜像加速地址。<br>
<img src="https://lixumin-zai.github.io/listenfor//post-images/1600916914312.png" alt="" loading="lazy"></p>
</li>
<li>
<p>配置Docker的自定义镜像仓库地址。</p>
</li>
</ol>
<pre><code>tee /etc/docker/daemon.json &lt;&lt;-'EOF'
{
  &quot;registry-mirrors&quot;: [&quot;https://*.mirror.aliyuncs.com&quot;]
}
EOF
</code></pre>
<ol start="4">
<li>
<p>重新加载服务配置文件，并重启Docker服务。</p>
<pre><code>systemctl daemon-reload
systemctl restart docker
</code></pre>
</li>
</ol>
<h2 id="使用docker安装nginx服务">使用Docker安装Nginx服务</h2>
<ol>
<li>查看Docker镜像仓库中Nginx的可用版本</li>
</ol>
<pre><code class="language-shell">docker search nginx
</code></pre>
<figure data-type="image" tabindex="4"><img src="https://lixumin-zai.github.io/listenfor//post-images/1600916935036.png" alt="" loading="lazy"></figure>
<ol start="2">
<li>拉取最新版的Nginx镜像。</li>
</ol>
<pre><code class="language-shell">docker pull nginx:latest
</code></pre>
<figure data-type="image" tabindex="5"><img src="https://lixumin-zai.github.io/listenfor//post-images/1600916944378.png" alt="" loading="lazy"></figure>
<ol start="3">
<li>查看本地镜像。</li>
</ol>
<pre><code class="language-shell">docker images
</code></pre>
<figure data-type="image" tabindex="6"><img src="https://lixumin-zai.github.io/listenfor//post-images/1600916953856.png" alt="" loading="lazy"></figure>
<ol start="4">
<li>运行容器。</li>
</ol>
<pre><code class="language-shell">docker run --name nginx-test -p 8080:80 -d nginx
</code></pre>
<p>命令参数说明：</p>
<ul>
<li>--name nginx-test：容器名称。</li>
<li>-p 8080:80： 端口进行映射，将本地8080端口映射到容器内部的80端口。</li>
<li>-d nginx： 设置容器在后台一直运行。<br>
<img src="https://lixumin-zai.github.io/listenfor//post-images/1600916963137.png" alt="" loading="lazy"></li>
</ul>
<ol start="5">
<li>
<p><mark>访问服务器前要设置ECS安全组，使得其他IP可以通过8080端口访问服务器</mark><br>
<img src="https://lixumin-zai.github.io/listenfor//post-images/1600916973371.png" alt="" loading="lazy"></p>
</li>
<li>
<p>在本地浏览器连接服务器<br>
<img src="https://lixumin-zai.github.io/listenfor//post-images/1600916998030.png" alt="" loading="lazy"></p>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[基于ECS搭建FTP服务]]></title>
        <id>https://lixumin-zai.github.io/listenfor/post/ji-yu-ecs-da-jian-ftp-fu-wu/</id>
        <link href="https://lixumin-zai.github.io/listenfor/post/ji-yu-ecs-da-jian-ftp-fu-wu/">
        </link>
        <updated>2020-09-23T13:09:52.000Z</updated>
        <content type="html"><![CDATA[<h2 id="远程连接ecs服务器">远程连接ECS服务器</h2>
<ol>
<li>
<p>打开系统自带的终端工具。</p>
<ul>
<li>Windows Terminal</li>
</ul>
</li>
<li>
<p>Windows10自带SSH工具。</p>
<ul>
<li>可以验证：<code>ssh -V</code><br>
<img src="https://lixumin-zai.github.io/listenfor//post-images/1600866901615.png" alt="" loading="lazy"></li>
</ul>
</li>
<li>
<p>连接终端</p>
<ul>
<li>
<p>输入命令：<code>ssh [username]@[ipaddress]</code></p>
</li>
<li>
<p>[username]服务器名称，[ipaddress]公网IP</p>
</li>
</ul>
</li>
</ol>
<figure data-type="image" tabindex="1"><img src="https://lixumin-zai.github.io/listenfor//post-images/1600866876118.png" alt="" loading="lazy"></figure>
<h2 id="安装vsftpd">安装vsftpd</h2>
<p>vsftpd（very secure FTP daemon）是一款在Linux发行版中最受推崇的FTP服务器。vsftpd支持匿名访问和本地用户模式两种访问方式。匿名访问方式任何用户都可以访问搭建的FTP服务；本地用户模式只支持添加的本地用户访问搭建的FTP服务。</p>
<ol>
<li>安装vsftpd
<ul>
<li>输入命令：<code>yum install -y vsftpd</code></li>
</ul>
</li>
</ol>
<figure data-type="image" tabindex="2"><img src="https://lixumin-zai.github.io/listenfor//post-images/1600866849157.png" alt="" loading="lazy"></figure>
<ol start="2">
<li>
<p>运行以下命令设置FTP服务开机自启动。</p>
<ul>
<li>输入命令：<code>systemctl enable vsftpd.service</code></li>
</ul>
</li>
<li>
<p>启动FTP服务。</p>
<ul>
<li>
<p>输入命令：<code>systemctl start vsftpd.service</code></p>
</li>
<li>
<p>检查是否启动成功：<code>netstat -antup | grep ftp</code></p>
</li>
</ul>
</li>
</ol>
<figure data-type="image" tabindex="3"><img src="https://lixumin-zai.github.io/listenfor//post-images/1600866811786.png" alt="" loading="lazy"></figure>
<h2 id="配置vsftpd">配置vsftpd</h2>
<ul>
<li>本地用户模式</li>
</ul>
<ol>
<li>为FTP服务创建一个Linux用户。
<ul>
<li>创建用户：<code>adduser ftptest</code></li>
<li>设置密码：<code>passwd ftptest</code></li>
</ul>
</li>
</ol>
<figure data-type="image" tabindex="4"><img src="https://lixumin-zai.github.io/listenfor//post-images/1600866775798.png" alt="" loading="lazy"></figure>
<ol start="2">
<li>
<p>创建一个供FTP服务使用的文件目录。</p>
<ul>
<li>输入命令：<code>mkdir /var/ftp/test</code></li>
</ul>
</li>
<li>
<p>将ftptes设置为/var/ftp/test目录的拥有者。</p>
<ul>
<li><code>chown -R ftptest:ftptest /var/ftp/test</code></li>
</ul>
</li>
<li>
<p>修改vsftpd.conf配置文件。</p>
<ul>
<li>配置FTP为主动模式请执行如下命令:</li>
</ul>
</li>
</ol>
<pre><code>sed -i 's/anonymous_enable=YES/anonymous_enable=NO/' /etc/vsftpd/vsftpd.conf #禁止匿名登录FTP服务器 
sed -i 's/listen=NO/listen=YES/' /etc/vsftpd/vsftpd.conf #监听IPv4 sockets 
sed -i 's/listen_ipv6=YES/#listen_ipv6=YES/' /etc/vsftpd/vsftpd.conf #关闭监听IPv6 sockets 
sed -i 's/#chroot_local_user=YES/chroot_local_user=YES/' /etc/vsftpd/vsftpd.conf #全部用户被限制在主目录 
sed -i 's/#chroot_list_enable=YES/chroot_list_enable=YES/' /etc/vsftpd/vsftpd.conf #启用例外用户名单 
sed -i 's/#chroot_list_file=/chroot_list_file=/' /etc/vsftpd/vsftpd.conf #指定例外用户列表文件，列表中的用户不被锁定在主目录 
echo &quot;allow_writeable_chroot=YES&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf 
echo &quot;local_root=/var/ftp/test&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf #设置本地用户登录后所在的目录
</code></pre>
<p>​	- 配置FTP为被动模式请执行如下命令：</p>
<pre><code>sed -i 's/anonymous_enable=YES/anonymous_enable=NO/' /etc/vsftpd/vsftpd.conf #禁止匿名登录FTP服务器 
sed -i 's/listen=NO/listen=YES/' /etc/vsftpd/vsftpd.conf #监听IPv4 sockets 
sed -i 's/listen_ipv6=YES/#listen_ipv6=YES/' /etc/vsftpd/vsftpd.conf #关闭监听IPv6 sockets 
sed -i 's/#chroot_local_user=YES/chroot_local_user=YES/' /etc/vsftpd/vsftpd.conf #全部用户被限制在主目录 
sed -i 's/#chroot_list_enable=YES/chroot_list_enable=YES/' /etc/vsftpd/vsftpd.conf #启用例外用户名单 
sed -i 's/#chroot_list_file=/chroot_list_file=/' /etc/vsftpd/vsftpd.conf #指定例外用户列表文件，列表中的用户不被锁定在主目录 
echo &quot;allow_writeable_chroot=YES&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf 
echo &quot;local_root=/var/ftp/test&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf #设置本地用户登录后所在的目录 

echo &quot;pasv_enable=YES&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf #开启被动模式 
echo &quot;pasv_address=&lt;FTP服务器公网IP地址&gt;&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf #本教程中为ECS服务器弹性IP 
echo &quot;pasv_min_port=20&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf #设置被动模式下，建立数据传输可使用的端口范围的最小值 
echo &quot;pasv_max_port=21&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf #设置被动模式下，建立数据传输可使用的端口范围的最大值
</code></pre>
<ol start="5">
<li>在/etc/vsftpd目录下创建chroot_list文件，并在文件中写入例外用户名单。</li>
</ol>
<pre><code>#使用vim命令编辑chroot_list文件，添加例外用户名单。此名单中的用户不会被锁定在主目录，可以访问其他目录。
vim /etc/vsftpd/chroot_list
</code></pre>
<p>说明: 没有例外用户时，也必须创建chroot_list文件，内容可为空。</p>
<ol start="6">
<li>配置好后重启FTP服务。</li>
</ol>
<pre><code>systemctl restart vsftpd.service
</code></pre>
<h2 id="客户端测试">客户端测试</h2>
<p>FTP客户端、Windows命令行工具或浏览器均可用来测试FTP服务器。（此步骤仅适用于本地用户，匿名模式无需进行测试操作）</p>
<p><mark>说明：使用浏览器访问FTP服务器出错时，建议您清除浏览器缓存后再尝试。</mark></p>
<ol>
<li>打开Chrom浏览器，在地址栏中输入ftp://&lt;FTP服务器公网IP地址&gt;:FTP端口</li>
</ol>
<p><img src="https://lixumin-zai.github.io/listenfor//post-images/1600866672855.png" alt="" loading="lazy"><br>
成功</p>
<figure data-type="image" tabindex="5"><img src="https://lixumin-zai.github.io/listenfor//post-images/1600866745093.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[阿里云服务器ECS Ubuntu16.04 初次使用配置教程(图形界面安装)]]></title>
        <id>https://lixumin-zai.github.io/listenfor/post/阿里云服务器ECS Ubuntu16.04 初次使用配置教程(图形界面安装)/</id>
        <link href="https://lixumin-zai.github.io/listenfor/post/阿里云服务器ECS Ubuntu16.04 初次使用配置教程(图形界面安装)/">
        </link>
        <updated>2020-07-07T05:20:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="阿里云服务器ecs-ubuntu1604-初次使用配置教程图形界面安装">阿里云服务器ECS Ubuntu16.04 初次使用配置教程(图形界面安装)</h3>
<h2 id="首次登陆">首次登陆</h2>
<h2 id="第一次登陆服务器时是这个样子的">第一次登陆服务器时，是这个样子的：</h2>
<figure data-type="image" tabindex="1"><img src="https://gitee.com/listen0/cloud_image/raw/master/win/20200524231543.png" alt="image-20200518230525083" loading="lazy"></figure>
<h2 id="输入指令">输入指令</h2>
<p>然后依次输入下面的命令（期间需要手动确认三次）：</p>
<pre><code class="language-css"># 更新软件库
apt-get update

# 升级软件
apt-get upgrade

# 安装桌面系统
apt-get install ubuntu-desktop
</code></pre>
<p>等到图形界面安装完成，关闭Workbench</p>
<p>reboot</p>
<p>使用VNC登录，如图：</p>
<figure data-type="image" tabindex="2"><img src="https://gitee.com/listen0/cloud_image/raw/master/win/20200519172706.png" alt="image-20200518222643127" loading="lazy"></figure>
<p>按提示完成一系列配置就可以使用了</p>
<figure data-type="image" tabindex="3"><img src="https://gitee.com/listen0/cloud_image/raw/master/win/20200519172545-2.png" alt="image-20200518230513151" loading="lazy"></figure>
<p>18.04</p>
<p>2.1依次完成以下命令（安装Ubnutu图形化界面）：</p>
<pre><code>    apt-get update
    apt-get install vnc4server
    apt-get install xfce4
    apt-get install ubuntu-desktop
    sudo apt-get install xrdp
</code></pre>
<pre><code>	# 执行下面两行命令
	cd /usr/share/lightdm/lightdm.conf.d/
    vim ./50-unity-greeter.conf

	# 在打开的文件中添加以下三行语句：
	user-session=ubuntu
    greeter-show-manual-login=true
    all-guest=false
    
</code></pre>
<pre><code>#命令执行：
vim /root/.profile  
# 最后一行修改为：
tty -s &amp;&amp; mesg n  || true

# 如下图
</code></pre>
<p>reboot</p>
]]></content>
    </entry>
</feed>